const { createClient } = require('@supabase/supabase-js')
const fs = require('fs')
const path = require('path')

const supabaseUrl = 'https://rscgytocxltrqtwspehs.supabase.co'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJzY2d5dG9jeGx0cnF0d3NwZWhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU4NjUzNDEsImV4cCI6MjA3MTQ0MTM0MX0.MkaV0vkLX9jdCxZ_5fz6jjZBhChc1W9vtVicZSt1Pt0'

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function applySchema() {
  console.log('üîß Application du sch√©ma de base de donn√©es...')
  
  try {
    // Test de connexion
    const { data: testData, error: testError } = await supabase
      .from('categories')
      .select('count')
      .limit(1)
    
    if (testError) {
      console.error('‚ùå Erreur de connexion:', testError)
      return
    }
    
    console.log('‚úÖ Connexion Supabase √©tablie')
    
    // V√©rification des tables existantes
    console.log('\nüìä V√©rification des tables existantes...')
    
    // Test de la table profiles
    const { data: profilesData, error: profilesError } = await supabase
      .from('profiles')
      .select('count')
      .limit(1)
    
    if (profilesError) {
      console.log('‚ö†Ô∏è  Table profiles non accessible:', profilesError.message)
    } else {
      console.log('‚úÖ Table profiles accessible')
    }
    
    // Test de la table missions
    const { data: missionsData, error: missionsError } = await supabase
      .from('missions')
      .select('count')
      .limit(1)
    
    if (missionsError) {
      console.log('‚ö†Ô∏è  Table missions non accessible:', missionsError.message)
    } else {
      console.log('‚úÖ Table missions accessible')
    }
    
    // Test de la table applications
    const { data: applicationsData, error: applicationsError } = await supabase
      .from('applications')
      .select('count')
      .limit(1)
    
    if (applicationsError) {
      console.log('‚ö†Ô∏è  Table applications non accessible:', applicationsError.message)
    } else {
      console.log('‚úÖ Table applications accessible')
    }
    
    console.log('\nüéØ R√©sum√©:')
    console.log('- Connexion Supabase: ‚úÖ')
    console.log('- Table categories: ‚úÖ (d√©j√† cr√©√©e)')
    console.log('- Table profiles: ' + (profilesError ? '‚ùå' : '‚úÖ'))
    console.log('- Table missions: ' + (missionsError ? '‚ùå' : '‚úÖ'))
    console.log('- Table applications: ' + (applicationsError ? '‚ùå' : '‚úÖ'))
    
    if (profilesError || missionsError || applicationsError) {
      console.log('\n‚ö†Ô∏è  Certaines tables ne sont pas encore cr√©√©es.')
      console.log('   Ex√©cutez le script SQL dans l\'interface Supabase SQL Editor.')
      console.log('   Commencez par: database/schema.sql')
    } else {
      console.log('\nüéâ Toutes les tables sont accessibles!')
    }
    
  } catch (error) {
    console.error('‚ùå Erreur inattendue:', error)
  }
}

applySchema()
